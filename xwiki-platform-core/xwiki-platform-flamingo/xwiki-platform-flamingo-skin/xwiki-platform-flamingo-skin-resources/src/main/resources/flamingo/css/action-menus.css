/*
--------------------------------------------------
Action Menus
--------------------------------------------------
*/

#menuview {
  .navbar {
    border-radius: 0;
    border: 0;
    margin-bottom: 0;
  }
  .navbar-header {
    float: left;
  }
  .navbar-brand {
    float: none;
    img {
      height: var(--navbar-height);
      display: inline;
    }
  }

  .navbar-nav {
    float: right;

    &.navbar-left > li {
      float: left;
    }

    &.navbar-right {
      display: flex;
    }
  }
  .navbar-form {
    margin-left: 0;
    margin-right: 0;
    padding-top: 0;
    padding-bottom: 0;
  }
  @media (max-width: var(--screen-sm-min)) {
    .dropdown-menu .divider {
      background-color: var(--navbar-default-border);
    }
    .navbar-left {
      float: left;
      margin-left: var(--navbar-padding-horizontal);
      margin-right: var(--navbar-padding-horizontal);
      /* Without this rule, the left navbar will cause unexpected layout shifts even when it's empty. */
      &:not(:has(> *)) {
        margin-top: 0;
      }  
    }
  }
}

@media (max-width: var(--screen-sm)) {
  // FIX Bootstrap: Reset custom display for dropdowns inside navbars
  #xwikimainmenu {
    & .open .dropdown-menu {
      /* Replace the custom embedded display by having the dropdown outside the nav. */
      position: absolute;

      /* Reset overwritten properties with Bootstrap variables. */
      border: 1px solid var(--dropdown-border);
      box-shadow: 0 6px 12px rgba(0, 0, 0, 0.175);

      & > li > a {
        color: inherit;

        &:hover, &:focus {
          background-color: var(--dropdown-link-hover-bg);
        }
      }

      & .divider {
        background-color: var(--dropdown-divider-bg);
      }
    }

    & .navbar-nav {
      /* Fix the alignment of the dropdown with the end of the topmenu. */
      margin-bottom: 0;
    }
  }
}
/* Authentication buttons ======================================================== */
/* Reduce the spacing between both items if there's both */
li:has(#tmLogin) + li #tmRegister {
  padding-right: 8px;
}
li:has(+ li #tmRegister) #tmLogin {
  padding-left: 8px;
}

/* Quick search ======================================================== */

#globalsearch {
  display: flex;
  flex-direction: row-reverse;
  align-items: center;
  margin: 0;
  padding: 0;

  /* Remove the bootstrap border on the form when the screen is small */
  @media (max-width: var(--screen-sm-max)) {
    border: none;
  }

  .btn {
    /* When the global search is active, the button has an "active"-kind color */
    background-color: var(--navbar-default-link-active-bg);
    color: var(--navbar-default-link-active-color);
    border: 0;
    border-radius: 0;
    box-shadow: none;
    margin: 0;
    padding: 10px var(--navbar-padding-horizontal);
    @media (min-width: var(--grid-float-breakpoint)) {
      padding: var(--navbar-padding-vertical) var(--navbar-padding-horizontal);
    }
    &:hover,
    &:focus {
      background-color: var(--navbar-default-link-hover-bg);
      color: var(--navbar-default-link-hover-color);
      box-shadow: none;
    }
    &:active {
      background-color: var(--navbar-default-link-active-bg);
      color: var(--navbar-default-link-active-color);
    }
  }

  /* The global search input */
  #headerglobalsearchinput { /* we need to be that specific to be applied */
    border-radius: 0;
    border: 0;
    min-width: 0;
    transition: width 300ms ease-in-out, padding 300ms ease-in-out;
    width: 200px; /* we need to set a width in pixels otherwise the transition is not applied nicely */
  }

  /* When the global search is closed */
  .btn[aria-expanded='false'] {
    background-color: var(--navbar-default-bg);
    color: var(--navbar-default-link-color);
    border: 0;
    /* Except when it is hovering */
    &:hover,
    &:focus {
      background-color: var(--navbar-default-link-hover-bg);
      color: var(--navbar-default-link-hover-color);
      box-shadow: none;
    }
    &:active {
      background-color: var(--navbar-default-link-active-bg);
      color: var(--navbar-default-link-active-color);
    }
    /* The input has no width (it's hidden basically, but we need to set the width to 0 to have the nice transition) */
    & + #headerglobalsearchinput { /* we need to be that specific to be applied */
      width: 0;
      padding: 0;
    }

    /* Hides the search result when the focus is not on the search field. */
    & ~ .searchSuggest {
      opacity: 0;
      max-height: 0;
    }
  }
}

@media (min-width: var(--screen-sm-min)) {
  .navbar-nav > li > a {
    /* When the page name is long, add ellipsis. */
    max-width: 10em;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }
}

/* Navbar avatar ========================================================== */

.navbar-avatar {
  > a {
    max-height: var(--navbar-height);

    > img { 
      --avatar-size: calc(round(down, calc( round(up,calc(var(--navbar-height) / 2), 1px) / 2), 1px) * 2);
      border-radius: var(--thumbnail-border-radius);
      height: var(--avatar-size);
      margin-top: calc( (var(--navbar-height) / 2) - var(--navbar-padding-vertical) - (var(--avatar-size) / 2));
      vertical-align: middle;
      width: var(--avatar-size);
    }
  }
}

/* Icon in a navbar  ====================================================== */

.icon-navbar {
  cursor: pointer;
}

/* XWikiMainMenu dropdown menus ======================================= */

#xwikimainmenu .dropdown-menu {
  background-color: var(--dropdown-bg);
}

/* Content menu  ====================================================== */

#contentmenu {
  /* Used a mix of LESS variables in order to assure the content buttons
   have a styling more similar to breadcrumbs than buttons, while looking
   decent across the bundled color themes */
  .btn-default {
    background-color: var(--breadcrumb-bg);
    background-image: none;
    border-color: var(--dropdown-divider-bg);
    box-shadow: none;
    color: var(--dropdown-link-color);
    text-shadow: none;
  }

  .btn-default:hover, .btn-default:active, .btn-default:focus, .open .dropdown-toggle {
    border-color: hsl(from var(--dropdown-divider-bg) h s calc(l - 0.10));
  }

  .dropdown {
    display: inline-block;
    font-size: var(--font-size-large);
    width: var(--font-size-large) * 2.5;

    > a {
      color: var(--headings-color);
      padding: var(--font-size-large);
    }
  }
  a.btn.disabled {
    opacity: 1;
    color: var(--text-muted);
    background-color: transparent;
  }

  .btn-group > dl.dropdown-menu {
    & > dt.dropdown-header {
      &.sr-only {
        /* Overwrite bootstrap default style that would take priority on .sr-only style */
        padding: 0;
      }

      font-weight: initial;
    }

    & > dd:not(:last-child) {
      /* Add a css separator under the section */
      padding-bottom: 10px;
      border-bottom: 1px solid var(--dropdown-divider-bg);
      margin-bottom: 10px;
    }

    & > dd > ul {
      /* Remove default list style */
      list-style: none;
      padding-left: 0;
      margin-bottom: 0;

      & > li > a {
        display: block;
        padding: 3px 20px;
        clear: both;
        font-weight: 400;
        line-height: var(--line-height-base);
        color: var(--dropdown-link-color);
        white-space: nowrap; /* prevent links from randomly breaking onto new lines */

      &:hover,
      &:focus {
        color: var(--dropdown-link-hover-color);
        text-decoration: none;
        background-color: var(--dropdown-link-hover-bg);
      }
      }
    }
  }
}
